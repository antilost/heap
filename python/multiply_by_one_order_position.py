#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

# Дана строка из десятичных цифр (длинное число). Написать код, который умножит это число на число 1 <= n <= 9.
# Ограничения по памяти: O(1) дополнительной памяти, т.е. надо использовать исходную строку.
# Разновидность той же задачи: в качестве "цифр" используются 4-байтовые беззнаковые числа (ui32),
# умножение на число, умещающееся в ui32. Формат длинного числа (big- или litte-endian) пусть кандидат выберет самостоятельно.

def multiply(str, digit):
    numbers = list(str)
    
    addition = 0
    for j, c in enumerate(reversed(numbers)):
        i = len(numbers) - 1 - j
        n = int(c)
        tmp = digit * n + addition
        numbers[i] = '{}'.format(tmp % 10)
        addition = tmp // 10
    if addition > 0:
        numbers.insert(0, '{}'.format(addition))
    return ''.join(numbers)

for a, b, expected in [
    (
        "1",
        2,
        "2"
    ),
    (
        "1119",
        9,
        "10071"
    ),
    (
        "111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        3,
        "333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333"
    ),
    (
        "0",
        1,
        "0"
    ),
    (
        "1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890",
        9,
        "11111111011111111101111111110111111111011111111101111111110111111111011111111101111111110111111111011111111101111111110111111111011111111101111111110111111111010"
    )
]:
    got = multiply(a, b)
    assert(got == expected)
print("ok")